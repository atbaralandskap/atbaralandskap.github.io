[
  {
    "objectID": "projekt/min_notodling/index.html",
    "href": "projekt/min_notodling/index.html",
    "title": "Min Nötodling",
    "section": "",
    "text": "Hem\n\n\nProjekt\n\n\nMin Nötodling\n\n\n\n\nMin Nötodling\nPlanering och design av en nötodling med skogsträdgårdsprinciper."
  },
  {
    "objectID": "projekt/lablab/oversiktsplanering/index.html",
    "href": "projekt/lablab/oversiktsplanering/index.html",
    "title": "Översiktsplanering",
    "section": "",
    "text": "Hem\n\n\nProjekt\n\n\nLablab\n\n\nÖversiktsplanering\n\n\n\n\nÖversiktsplanering\nAnalyserna på denna sida hjälper oss att identifiera kommuner där översiktsplaneringen börjar bli inaktuell. Målet är att kunna rikta kommande anbud och samarbeten mot de kommuner som snart behöver ta fram en ny översiktsplan, så att vi kan erbjuda relevant kompetens i rätt tid.\n\nStatus i översiktsplaneringen\nKartan nedan visar status i översiktsplaneringen och hur väl de svenska kommunerna följer upp sitt planarbete genom en planeringsstrategi. Underlaget bygger på öppna data från Boverket, där varje kommuns senaste år med laga kraft för sin översiktsplan (ÖP), antal ändringar och tillägg, samt förekomst av planeringsstrategi har sammanställts.\nUtifrån dessa uppgifter har ett index beräknats som anger hur angeläget det är för en kommun att uppdatera sin översiktsplan. Indexet väger samman åldern på gällande ÖP och om kommunen har en planeringsstrategi eller inte. Kommuner med äldre planer får ett högre grundvärde, medan kommuner utan planeringsstrategi får ett tillägg på indexet. Kommuner som nyligen antagit en ÖP (2022–2024) får däremot ett lågt värde oavsett strategi, eftersom deras planering anses aktuell.\nResultatet visualiseras som ett prioriteringsindex på kartan, där färgerna går från grönt (uppdaterad plan, låg prioritet) till rött (gammal plan, hög prioritet). Kartan kan även visa vilka kommuner som saknar planeringsstrategi samt när deras senaste översiktsplan vann laga kraft.\n\n\nCode\nlibrary(mapview)\n\nlayers &lt;- readRDS(\"C:/Users/henri/data/processed/map_layers_ultralight.Rds\")\n\n\nkommun3 &lt;- layers$kommun3\nkommun2 &lt;- layers$kommun2\nlan &lt;- layers$lan\nkommun_no_plan &lt;- layers$kommun_no_plan\nkommun_no_plan_recent &lt;- layers$kommun_no_plan_recent\nbrks_index &lt;- layers$brks_index\nbrks_kom &lt;- layers$brks_kom\npal_fun_index_adj &lt;- layers$pal_fun_index_adj\npal_fun &lt;- layers$pal_fun\n\n\nmapview(kommun3, zcol = \"score\",\n             at = brks_index,\n             col.regions = pal_fun_index_adj,\n             alpha.regions = 0.6,\n             legend = TRUE,\n             layer.name = \"Prioriteringsindex\",\n             popup = leafpop::popupTable(\n               kommun3,\n               zcol = c(\"kommunnamn\", \"öp_laga_kraft\", \"plan_strat\", \"score\"),\n               row.numbers = FALSE\n             )) +\n  mapview(kommun2,\n          zcol = \"öp_laga_kraft\",\n          at = brks_kom,\n          col.regions = pal_fun,\n          alpha.regions = 0.6,\n          legend = FALSE,\n          layer.name = \"Översiktsplaner\", hide = TRUE) +\n  mapview(lan,\n          col.regions = NA,\n          color = \"black\",\n          lwd = 1,\n          alpha.regions = 0,\n          legend = FALSE,\n          layer.name = \"Länsgränser\", hide = TRUE) +\n  mapview(kommun_no_plan,\n          col.regions = \"brown4\",\n          alpha.regions = 0.6,\n          legend = TRUE,\n          layer.name = \"Saknar planeringsstrategi\", hide = TRUE) +\n  mapview(kommun_no_plan_recent,\n          col.regions = \"limegreen\",\n          alpha.regions = 0.6,\n          legend = TRUE,\n          layer.name = \"Saknar planeringsstrategi + ÖP 2022–2024\", hide = TRUE)\n\n\n\n\n\n\n\n\nCode\n# ============================================================\n# Kommunnätverk – interaktiv visualisering med visNetwork\n# ============================================================\n\nlibrary(sf)\nlibrary(spdep)\nlibrary(rmapshaper)\nlibrary(igraph)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(visNetwork)\n\n# ------------------------------------------------------------\n# 1. Läs in kommundata (med klimatkollen-score)\n# ------------------------------------------------------------\nkommuner_klimatkollen &lt;- readRDS(\"C:/Users/henri/data/processed/kommuner_klimatkollen_score.Rds\")\n\n# Förenkla geometrin för snabbare bearbetning\nkommuner_simplified &lt;- ms_simplify(kommuner_klimatkollen, keep = 0.05, keep_shapes = TRUE)\n\n# ------------------------------------------------------------\n# 2. Skapa grannrelationer (vilka kommuner gränsar till varandra)\n# ------------------------------------------------------------\nnb &lt;- poly2nb(kommuner_simplified, row.names = kommuner_simplified$kommun)\n\n# Gör en lista över grannar\nedge_list &lt;- data.frame(\n  from = rep(1:length(nb), lengths(nb)),\n  to   = unlist(nb)\n)\n\n# Skapa uppslagstabell mellan index och kommunkod\nid_map &lt;- tibble(index = seq_along(nb), kommunkod = kommuner_simplified$kommun)\n\n# Namnge kanter med kommunkoder\nedges_named &lt;- edge_list %&gt;%\n  as_tibble() %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;%\n  rename(from_kod = kommunkod) %&gt;%\n  left_join(id_map, by = c(\"to\" = \"index\")) %&gt;%\n  rename(to_kod = kommunkod) %&gt;%\n  dplyr::select(from_kod, to_kod) %&gt;%\n  distinct()  # Ta bort dubbletter (A–B = B–A)\n\n# ------------------------------------------------------------\n# 3. Skapa grafobjekt och attribut\n# ------------------------------------------------------------\ng &lt;- graph_from_data_frame(edges_named, directed = FALSE)\n\nkommun_meta &lt;- kommuner_simplified %&gt;%\n  st_drop_geometry() %&gt;%\n  dplyr::select(kommun, kommunnamn, Region)\n\nV(g)$namn &lt;- kommun_meta$kommunnamn[match(V(g)$name, kommun_meta$kommun)]\nV(g)$lan  &lt;- kommun_meta$Region[match(V(g)$name, kommun_meta$kommun)]\n\n# ------------------------------------------------------------\n# 4. Skapa noder och kanter för visNetwork\n# ------------------------------------------------------------\nnodes &lt;- kommuner_simplified %&gt;%\n  st_drop_geometry() %&gt;%\n  transmute(\n    id    = kommun,\n    label = kommunnamn,\n    group = Region,\n    value = score,\n    title = paste0(\n      \"&lt;b&gt;\", kommunnamn, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Region: \", Region, \"&lt;br&gt;\",\n      \"Score: \", score, \"&lt;br&gt;\",\n      \"Planstrategi: \", plan_strat, \"&lt;br&gt;\",\n      \"ÖP laga kraft: \", öp_laga_kraft\n    )\n  )\n\nscore_lookup &lt;- nodes %&gt;%\n  dplyr::select(id, value)\n\nedges_df &lt;- igraph::as_data_frame(g, what = \"edges\") %&gt;%\n  left_join(score_lookup, by = c(\"from\" = \"id\")) %&gt;%\n  rename(score_from = value) %&gt;%\n  left_join(score_lookup, by = c(\"to\" = \"id\")) %&gt;%\n  rename(score_to = value) %&gt;%\n  mutate(value = score_from + score_to)\n\n\n\n\nEtt topologisk nätverk\nDen interaktiva visualiseringen nedan visar ett topologiskt nätverk över Sveriges kommuner. Varje nod representerar en kommun, och länkarna visar grannrelationer – alltså kommuner som delar en geografisk gräns. Noderna är färgade efter län och skalas efter ett index. Länkarnas tjocklek påverkas av summan av de anslutna kommunernas värden, vilket gör det möjligt att ana kluster av kommuner med liknande förutsättningar.\nTill skillnad från en vanlig karta bygger denna figur inte på geografiska koordinater, utan på topologiska samband. Layouten styrs av en fysikmodell (Barnes–Hut) där noder repellerar varandra samtidigt som länkarna fungerar som fjädrar. Kommuner med många grannar tenderar därför att dras mot centrum, medan mer isolerade kommuner hamnar längre ut. Resultatet blir en “svävande” struktur som visar relationer i närhetsnätverket, snarare än kommunernas faktiska läge i Sverige.\n\n\nCode\n# ------------------------------------------------------------\n# 5. Rita interaktiv nätverksgraf\n# ------------------------------------------------------------\nvisNetwork(nodes, edges_df) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visNodes(scaling = list(min = 10, max = 200)) %&gt;%\n  visPhysics(\n    stabilization = TRUE,\n    barnesHut = list(\n      gravitationalConstant = -500000,\n      springLength = 150,\n      springConstant = 0.005\n    )\n  ) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE)"
  },
  {
    "objectID": "projekt/lablab/formas_bla_transformation/index.html",
    "href": "projekt/lablab/formas_bla_transformation/index.html",
    "title": "Markanvändning i Södermanland",
    "section": "",
    "text": "Diagram med ggplot\nggplot2 är ett R-paket för att skapa tydliga och flexibla datavisualiseringar baserade på det grammatiska ramverket för grafik. girafe (från paketet ggiraph) bygger vidare på ggplot2 och gör diagrammen interaktiva, så att användaren kan hovra över element för att se information i verktygstips eller markera objekt visuellt.\nAnalysen visar hur mark och vatten används inom Södermanlands län, baserat på öppna kartdata från OpenStreetMap. Data har bearbetats geografiskt för att avgränsas till länets kommuner och för att klassificera ytor efter typ av markanvändning, såsom skog, jordbruksmark, bebyggelse och vatten. För varje kommun har arealer beräknats i hektar och summerats per kategori. De tio största markanvändningstyperna per kommun lyfts fram för att underlätta jämförelser. Resultatet presenteras i ett interaktivt diagram där skillnader i markanvändning och rumslig struktur mellan kommunerna tydliggörs.\n\n\nCode\nlibrary(sf)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggiraph)\nlibrary(mapview)\nlibrary(scales)\nlibrary(tidytext)\nlibrary(leaflet)\n\nlayers &lt;- readRDS(\"C:/Users/henri/data/processed/sormland_landuse_ready.Rds\")\n\ncombined_landuse   &lt;- layers$combined_landuse\nwaterways_sormland &lt;- layers$waterways_sormland\nwater_sormland     &lt;- layers$water_sormland\nsormland           &lt;- layers$sormland\n\n\n\n\nCode\n# ---- Aggregate for plotting ----\narea_plot_data &lt;- combined_landuse %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(kommunnamn, fclass) %&gt;%\n  summarise(total_ha = sum(area_ha, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  mutate(fclass_reorder = reorder_within(fclass, total_ha, kommunnamn))\n\n\ncustom_colors &lt;- c(\n  \"forest\"=\"#2E8B57\",\"farmland\"=\"#F4D03F\",\"residential\"=\"#E67E22\",\"industrial\"=\"#95A5A6\",\n  \"nature_reserve\"=\"#27AE60\",\"meadow\"=\"#A9DFBF\",\"military\"=\"#D2B48C\",\n  \"water\"=\"#3498DB\",\"wetland\"=\"#76D7C4\",\"other\"=\"#D5D8DC\"\n)\n\ncustom_colors &lt;- c(custom_colors, setNames(rep(\"#D5D8DC\", 1), \"other\"))\nfill_scale &lt;- scale_fill_manual(values = custom_colors, na.value = \"#D5D8DC\")\n\n# Add tooltip aesthetics\np &lt;- ggplot(area_plot_data,\n            aes(x = fclass_reorder,\n                y = total_ha,\n                fill = fclass,\n                tooltip = paste0(\"Land use: \", fclass, \"\\nArea: \", round(total_ha), \" ha\"),\n                data_id = fclass)) +\n  geom_bar_interactive(stat = \"identity\") +\n  facet_wrap(~kommunnamn, scales = \"free_y\") +\n  coord_flip() +\n  scale_x_reordered() +\n  theme_minimal(base_size = 9) +  # globally smaller base font\n  labs(x = \"Land use type\", y = \"Area (ha)\", fill = \"Land use\") +\n  fill_scale +\n  theme(\n    strip.text = element_text(size = 8, face = \"bold\"),          # kommun names\n    axis.text.x = element_text(size = 7, angle = 0, vjust = 1),  # numeric axis (area)\n    axis.text.y = element_text(size = 7, hjust = 1),             # land use names\n    axis.title.x = element_text(size = 8, face = \"bold\", vjust = -0.2),\n    axis.title.y = element_text(size = 8, face = \"bold\"),\n    legend.text = element_text(size = 7),\n    legend.title = element_text(size = 8),\n    panel.spacing = unit(0.8, \"lines\")                           # a little breathing room\n  ) +\n  scale_y_continuous(\n    labels = scales::label_number(scale_cut = scales::cut_short_scale()),\n    expand = expansion(mult = c(0, 0.05))  # a bit of space above bars\n  )\n\n\ngirafe(ggobj = p,\n       options = list(\n         opts_hover(css = \"fill-opacity:0.9;stroke:black;stroke-width:1.5px;\"),\n         opts_tooltip(css = \"background-color:rgba(255,255,255,0.9);color:black;padding:4px;border-radius:5px;\")\n       ))\n\n\n\n\n\n\n\n\nKarta med Mapview\nmapview är ett R-paket som används för att snabbt visualisera geografiska data interaktivt direkt från R. Det bygger på leaflet och gör det möjligt att utforska rumsliga objekt — som punkter, linjer och polygoner — med zoom, lagerhantering och popup-information utan att behöva exportera till externa GIS-program.\nKartan visar den rumsliga fördelningen av olika typer av markanvändning i Södermanlands län. Underlaget bygger på sammanställda polygondata från OpenStreetMap, där varje yta har klassificerats utifrån sin funktion, till exempel skog, jordbruksmark, bebyggelse eller vatten. Färgerna i kartan representerar respektive markanvändningskategori, och genom att klicka på ett område visas information om platsens namn, kommun och beräknad areal. Kartan är interaktiv — användaren kan zooma, panorera och utforska hur markanvändningen varierar mellan olika delar av länet.\n\n\nCode\n# ---- Mapview ----\n# Ensure every fclass has a defined color\ncustom_colors &lt;- c(\n  \"forest\"=\"#2E8B57\",\"farmland\"=\"#F4D03F\",\"residential\"=\"#E67E22\",\"industrial\"=\"#95A5A6\",\n  \"nature_reserve\"=\"#27AE60\",\"meadow\"=\"#A9DFBF\",\"military\"=\"#D2B48C\",\n  \"water\"=\"#3498DB\",\"wetland\"=\"#76D7C4\",\"other\"=\"#D5D8DC\",\n  \"scrub\"=\"#A0522D\",\"grass\"=\"#C2E699\",\"farmyard\"=\"#F7DC6F\",\n  \"recreation_ground\"=\"#58D68D\",\"quarry\"=\"#BFC9CA\"\n)\n\n\ncombined_landuse &lt;- combined_landuse %&gt;%\n  mutate(color = custom_colors[fclass])\n\nused_classes &lt;- sort(unique(combined_landuse$fclass))\nused_colors  &lt;- custom_colors[used_classes]\n\nm_landuse &lt;- mapview(\n  combined_landuse,\n  zcol = \"fclass\",\n  col.regions = combined_landuse$color,\n  lwd = 0,\n  popup = combined_landuse$popup,\n  alpha.regions = 0.7,\n  legend = FALSE,\n  layer.name = \"Markanvändning\"\n)\n\nm_landuse@map &lt;- m_landuse@map %&gt;%\n  addLegend(\n    \"topright\",\n    title = \"Markanvändning\",\n    colors = unname(used_colors),\n    labels = used_classes,\n    opacity = 0.9\n  )\n\nm_waterways &lt;- mapview(waterways_sormland, zcol = \"OVclass\", lwd = 2,\n                       legend = TRUE, popup = waterways_sormland$popup, layer.name = \"Vattendrag\", hide = TRUE)\nm_water &lt;- mapview(water_sormland, zcol = \"fclass\",\n                   col.regions = c(\"water\"=\"#4F9DDE\",\"wetland\"=\"#7FC97F\"),\n                   popup = water_sormland$popup, alpha.regions = 0.7, layer.name = \"Vattenytor\", hide = TRUE)\nm_admin &lt;- mapview(sormland, alpha.regions = 0, color = \"black\", lwd = 1.2, layer.name = \"Kommungränser\", hide = TRUE)\n\nm_landuse + m_water + m_waterways + m_admin"
  },
  {
    "objectID": "projekt/forna/index.html",
    "href": "projekt/forna/index.html",
    "title": "Förna - En matskog i en växthusruin",
    "section": "",
    "text": "Hem\n\n\nProjekt\n\n\nFormas\n\n\n\n\nFörna - En matskog i en växthusruin\nFörnas hemsida och webbutik."
  },
  {
    "objectID": "manifest.html",
    "href": "manifest.html",
    "title": "Manifest",
    "section": "",
    "text": "Manifest\nVi arbetar i gränslandet mellan planering, GIS och landskapsanalys.\nPrinciper:\n\nÖppenhet – reproducibla metoder, öppna format när möjligt.\n\nSkalbarhet – från karta till beslutsunderlag.\n\nEkologi + människa – metod möter sammanhang.\n\n(Finslipa texten när du vill.)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ätbara landskap AB",
    "section": "",
    "text": "Vi arbetar i gränslandet mellan samhällsplanering, GIS och agroforestry – där digitala verktyg möter ekologiska och sociala processer. Genom att kombinera dataanalys, kartläggning och landskapsförståelse försöker vi hitta praktiska vägar mot mer hållbara och produktiva miljöer.\nDenna webbplats samlar våra projekt, metoder och samarbeten, och fungerar samtidigt som en dokumentation av hur teknik, planering och odling kan mötas i praktiken.\nEtt särskilt verktyg i arbetet är OpenAI:s ChatGPT, som används för att felsöka och generera kod, strukturera analyser, utveckla metoder, skriva texter och reflektera över resultat. Arbetet sker som ett pågående samtal mellan människa och maskin – där AI fungerar som en kollega, handledare och ibland kreativ medförfattare."
  },
  {
    "objectID": "index.html#navigera",
    "href": "index.html#navigera",
    "title": "Ätbara landskap AB",
    "section": "Navigera",
    "text": "Navigera\n\nProjekt\nManifest\nCV – Henrik Aldén"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Kontakt",
    "section": "",
    "text": "Kontakt\n📍 Holmavägen 119 i Tåghusa utanför Sankt Olof 277 45, Simrishamns kommun\n📧 henkealden@gmail.com 🌍 GitHub – Atbara Landskap"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "CV – Henrik Aldén",
    "section": "",
    "text": "*(Kort introduktion; fyll på med erfarenhet, utbildning, verktyg.)*\n## Erfarenhet\n- **GIS-analytiker / konsult** (år–nu) – Kort beskrivning.\n- **Stadsplanering** – …\n## Utbildning\n- …\n## Verktyg\nR, PostGIS, QGIS, ArcGIS Pro, Quarto, GitHub Pages, Python (pandas), m.m.\n## Kontakt\n- E-post: info@atbaralandskap.se\n- GitHub: [atbaralandskap](https://github.com/atbaralandskap)"
  },
  {
    "objectID": "cv.html#cv-henrik-aldén",
    "href": "cv.html#cv-henrik-aldén",
    "title": "CV – Henrik Aldén",
    "section": "",
    "text": "*(Kort introduktion; fyll på med erfarenhet, utbildning, verktyg.)*\n## Erfarenhet\n- **GIS-analytiker / konsult** (år–nu) – Kort beskrivning.\n- **Stadsplanering** – …\n## Utbildning\n- …\n## Verktyg\nR, PostGIS, QGIS, ArcGIS Pro, Quarto, GitHub Pages, Python (pandas), m.m.\n## Kontakt\n- E-post: info@atbaralandskap.se\n- GitHub: [atbaralandskap](https://github.com/atbaralandskap)"
  },
  {
    "objectID": "projekt/index.html",
    "href": "projekt/index.html",
    "title": "Projekt",
    "section": "",
    "text": "Våra projekt\nEn översikt över våra pågående arbeten och samarbeten.\n\n\nFörna – En matskog i en växthusruin\nWebbutik och hemsida till föreningen Förna i Bästekille\nÖppna\n\n\nLablab – Konsortium\nEtt samarbete mellan Ätbara Landskap och tankesmedjan LabLab.\nÖppna\n\n\nMin Nötodling\nPlanering och design av min nötodling.\nÖppna"
  },
  {
    "objectID": "projekt/lablab/index.html",
    "href": "projekt/lablab/index.html",
    "title": "Lablab + Ätbara landskap - Ett konsortium",
    "section": "",
    "text": "Hem\n\n\nProjekt\n\n\nLablab\n\n\n\nVi arbetar i korsningen mellan planering, data och experiment.\nHär samlar vi analyser, texter och kartor kopplade till samarbetet. Här är några av våra pågående arbeten inom Lablab Konsortium.\n\n\n🗺️ Översiktsplanering\nUtveckling av metoder för att analysera rumsliga samband mellan planeringsunderlag och ekologiska nätverk.\nÖppna\n\n\n🌊 Formas – Blå Transformation\nEtt forskningsprojekt finansierat av Formas, med fokus på vattennära stadsutveckling och klimatförändringar.\nÖppna\n\n\n✍️ Textanalys\nAnalys av forsknings- och planeringsdokument med hjälp av NLP och språkmodeller.\nÖppna"
  },
  {
    "objectID": "projekt/lablab/textanalys/index.html",
    "href": "projekt/lablab/textanalys/index.html",
    "title": "Textanalys",
    "section": "",
    "text": "Hem\n\n\nProjekt\n\n\nLablab\n\n\nTextanalys\n\n\n\n\nRubenson metoden 2.0\nAutomatiserad textanalys av planeringsdokument. Fokus ligger på att identifiera teman, begrepp och kopplingar mellan texter. Metoden är under utveckling."
  },
  {
    "objectID": "projekt/lablab/oversiktsplanering/index.html#interaktiv-karta",
    "href": "projekt/lablab/oversiktsplanering/index.html#interaktiv-karta",
    "title": "Översiktsplanering",
    "section": "Interaktiv karta",
    "text": "Interaktiv karta\n\n\n\n\nCode\n# ============================================================\n# Kommunnätverk – interaktiv visualisering med visNetwork\n# ============================================================\n\nlibrary(sf)\nlibrary(spdep)\nlibrary(rmapshaper)\nlibrary(igraph)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(visNetwork)\n\n# ------------------------------------------------------------\n# 1. Läs in kommundata (med klimatkollen-score)\n# ------------------------------------------------------------\nkommuner_klimatkollen &lt;- readRDS(\"C:/Users/henri/data/processed/kommuner_klimatkollen_score.Rds\")\n\n# Förenkla geometrin för snabbare bearbetning\nkommuner_simplified &lt;- ms_simplify(kommuner_klimatkollen, keep = 0.05, keep_shapes = TRUE)\n\n# ------------------------------------------------------------\n# 2. Skapa grannrelationer (vilka kommuner gränsar till varandra)\n# ------------------------------------------------------------\nnb &lt;- poly2nb(kommuner_simplified, row.names = kommuner_simplified$kommun)\n\n# Gör en lista över grannar\nedge_list &lt;- data.frame(\n  from = rep(1:length(nb), lengths(nb)),\n  to   = unlist(nb)\n)\n\n# Skapa uppslagstabell mellan index och kommunkod\nid_map &lt;- tibble(index = seq_along(nb), kommunkod = kommuner_simplified$kommun)\n\n# Namnge kanter med kommunkoder\nedges_named &lt;- edge_list %&gt;%\n  as_tibble() %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;%\n  rename(from_kod = kommunkod) %&gt;%\n  left_join(id_map, by = c(\"to\" = \"index\")) %&gt;%\n  rename(to_kod = kommunkod) %&gt;%\n  dplyr::select(from_kod, to_kod) %&gt;%\n  distinct()  # Ta bort dubbletter (A–B = B–A)\n\n# ------------------------------------------------------------\n# 3. Skapa grafobjekt och attribut\n# ------------------------------------------------------------\ng &lt;- graph_from_data_frame(edges_named, directed = FALSE)\n\nkommun_meta &lt;- kommuner_simplified %&gt;%\n  st_drop_geometry() %&gt;%\n  dplyr::select(kommun, kommunnamn, Region)\n\nV(g)$namn &lt;- kommun_meta$kommunnamn[match(V(g)$name, kommun_meta$kommun)]\nV(g)$lan  &lt;- kommun_meta$Region[match(V(g)$name, kommun_meta$kommun)]\n\n# ------------------------------------------------------------\n# 4. Skapa noder och kanter för visNetwork\n# ------------------------------------------------------------\nnodes &lt;- kommuner_simplified %&gt;%\n  st_drop_geometry() %&gt;%\n  transmute(\n    id    = kommun,\n    label = kommunnamn,\n    group = Region,\n    value = score,\n    title = paste0(\n      \"&lt;b&gt;\", kommunnamn, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Region: \", Region, \"&lt;br&gt;\",\n      \"Score: \", score, \"&lt;br&gt;\",\n      \"Planstrategi: \", plan_strat, \"&lt;br&gt;\",\n      \"ÖP laga kraft: \", öp_laga_kraft\n    )\n  )\n\nscore_lookup &lt;- nodes %&gt;%\n  dplyr::select(id, value)\n\nedges_df &lt;- igraph::as_data_frame(g, what = \"edges\") %&gt;%\n  left_join(score_lookup, by = c(\"from\" = \"id\")) %&gt;%\n  rename(score_from = value) %&gt;%\n  left_join(score_lookup, by = c(\"to\" = \"id\")) %&gt;%\n  rename(score_to = value) %&gt;%\n  mutate(value = score_from + score_to)\n\n\n\nKommunernas topologiska nätverk\nDenna interaktiva visualisering visar ett topologiskt nätverk över Sveriges kommuner. Varje nod representerar en kommun, och länkarna visar grannrelationer – alltså kommuner som delar en geografisk gräns. Noderna är färgade efter län och skalas efter kommunens score från Klimatkollen-indexet. Länkarnas tjocklek påverkas av summan av de anslutna kommunernas värden, vilket gör det möjligt att ana kluster av kommuner med liknande förutsättningar.\nTill skillnad från en vanlig karta bygger denna figur inte på geografiska koordinater, utan på topologiska samband. Layouten styrs av en fysikmodell (Barnes–Hut) där noder repellerar varandra samtidigt som länkarna fungerar som fjädrar. Kommuner med många grannar tenderar därför att dras mot centrum, medan mer isolerade kommuner hamnar längre ut. Resultatet blir en “svävande” struktur som visar relationer i närhetsnätverket, snarare än kommunernas faktiska läge i Sverige.\n\n\nCode\n# ------------------------------------------------------------\n# 5. Rita interaktiv nätverksgraf\n# ------------------------------------------------------------\nvisNetwork(nodes, edges_df) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visNodes(scaling = list(min = 10, max = 200)) %&gt;%\n  visPhysics(\n    stabilization = TRUE,\n    barnesHut = list(\n      gravitationalConstant = -500000,\n      springLength = 150,\n      springConstant = 0.005\n    )\n  ) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE)"
  }
]